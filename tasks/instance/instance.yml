---
- name: "Init broker with default values."
  ansible.builtin.set_fact:
    _broker:
      artemis_home: "{{ broker.artemis_home | default(artemis_home) }}"
      name: "{{ broker.name }}"
      path: "{{ broker.path | default(artemis_brokers_path ) }}"
      user: "{{ broker.user }}"
      password: "{{ broker.password }}"
      broker_xml: "{{ broker.broker_xml | d(artemis_broker_xml_default) }}"
      bootstrap_xml: "{{ broker.bootstrap_xml | d(artemis_bootstrap_xml_default) }}"
      jolokia_access_xml: "{{ broker.jolokia_access_xml| d(artemis_jolokia_access_xml_default) }}"

      # log_file: "{{ broker.log_file | default(artemis_log_file) }}"

- name: "Check if {{ _broker.name }} already created"
  ansible.builtin.stat: path={{ _broker.path }}/{{ _broker.name }}
  register: broker_path

- debug:
    var: broker_path

- name: "Create broker {{ _broker.name }}"
  ansible.builtin.command:
    argv:
    - "{{ artemis_home }}/bin/artemis"
    - create
    - "{{ _broker.path }}/{{ _broker.name }}"
    - --user
    - "{{ _broker.user }}"
    - --password
    - "{{ _broker.password }}"
    - --allow-anonymous
  args:
    creates: "{{ _broker.path }}/{{ _broker.name }}"
  no_log: true

- name: "Update owner / group for broker folder"
  ansible.builtin.file:
    path: "{{ _broker.path }}/{{ _broker.name }}"
    state: directory
    recurse: True
    owner: "{{ artemis_user}}"
    group: "{{ artemis_group }}"

- name: "Configure instance"
  ansible.builtin.include_tasks: configure.yml

- name: "Install broker as service"
  ansible.builtin.include_tasks: service.yml
